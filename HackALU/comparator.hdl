/* 8-bit comparator*/
CHIP comparator{
   IN x[16],y[16];
   OUT z;
   PARTS:
   Xor(a=x[0],b=y[0],out=z0);
   Xor(a=x[1],b=y[1],out=z1);
   Xor(a=x[2],b=y[2],out=z2);
   Xor(a=x[3],b=y[3],out=z3);
   Xor(a=x[4],b=y[4],out=z4);
   Xor(a=x[5],b=y[5],out=z5);
   Xor(a=x[6],b=y[6],out=z6);
   Xor(a=x[7],b=y[7],out=z7);
   Xor(a=x[8],b=y[9],out=z8);
   Xor(a=x[9],b=y[8],out=z9);
   Xor(a=x[10],b=y[10],out=z10);
   Xor(a=x[11],b=y[11],out=z11);
   Xor(a=x[12],b=y[12],out=z12);
   Xor(a=x[13],b=y[13],out=z13);
   Xor(a=x[14],b=y[14],out=z14);
   Xor(a=x[15],b=y[15],out=z15);
   Or(a=z0,b=z1,out=c0);
   Or(a=c0,b=z2,out=c1);
   Or(a=c1,b=z3,out=c2);
   Or(a=c2,b=z4,out=c3);
   Or(a=c3,b=z5,out=c4);
   Or(a=c4,b=z6,out=c5);
   Or(a=c5,b=z7,out=c6);
   Or(a=c6,b=z8,out=c7);
   Or(a=c7,b=z9,out=c8);
   Or(a=c8,b=z10,out=c9);
   Or(a=c9,b=z11,out=c10);
   Or(a=c10,b=z12,out=c11);
   Or(a=c11,b=z13,out=c12);
   Or(a=c12,b=z14,out=c13);
   Or(a=c13,b=z15,out=c14);
   Not(in=c14,out=z);
}

